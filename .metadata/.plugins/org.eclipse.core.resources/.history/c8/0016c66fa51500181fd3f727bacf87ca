import java.io.*;
import java.util.*;


public class Pipeline {
	static int[]piplines;
	
	public static void main(String[]args) throws IOException {
		Scanner sc = new Scanner(System.in);
		long n = sc.nextLong();
		int k = sc.nextInt();
		piplines= new int[k+1];piplines[1]=1;
		for(int i = 2 ; i<=k;i++)piplines[i]=i+piplines[i-1]-1;
		System.out.println(BS(n));
	}
	
	static int BS(long target) {
		int st=0,end=piplines.length-1,mid=0;
		
		while(st<=end) {
			mid  = (st+end)/2;
			if(piplines[mid]<target)st=mid+1;
			else end=mid-1;
		}
		System.out.println(st);
		return end;
	}
	
	
	
	
	
	
	
	
	
	static class Scanner 
	{
		StringTokenizer st;
		BufferedReader br;

		public Scanner(InputStream s){	br = new BufferedReader(new InputStreamReader(s));}

		public String next() throws IOException 
		{
			while (st == null || !st.hasMoreTokens()) 
				st = new StringTokenizer(br.readLine());
			return st.nextToken();
		}

		public int nextInt() throws IOException {return Integer.parseInt(next());}
		
		public long nextLong() throws IOException {return Long.parseLong(next());}

		public String nextLine() throws IOException {return br.readLine();}
		
		public double nextDouble() throws IOException
		{
			String x = next();
			StringBuilder sb = new StringBuilder("0");
			double res = 0, f = 1;
			boolean dec = false, neg = false;
			int start = 0;
			if(x.charAt(0) == '-')
			{
				neg = true;
				start++;
			}
			for(int i = start; i < x.length(); i++)
				if(x.charAt(i) == '.')
				{
					res = Long.parseLong(sb.toString());
					sb = new StringBuilder("0");
					dec = true;
				}
				else
				{
					sb.append(x.charAt(i));
					if(dec)
						f *= 10;
				}
			res += Long.parseLong(sb.toString()) / f;
			return res * (neg?-1:1);
		}
		
		public boolean ready() throws IOException {return br.ready();}


	}

}
